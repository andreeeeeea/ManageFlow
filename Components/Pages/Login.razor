@page "/login"
@using Microsoft.AspNetCore.Identity
@using EmployeeManager.Data.Models
@using Microsoft.AspNetCore.Authorization
@using EmployeeManager.Services
@attribute [AllowAnonymous]
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Login</PageTitle>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<div class="row justify-content-center mt-5">
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h3 class="text-center">Login</h3>

                <EditForm Model="@model" OnValidSubmit="HandleLogin" FormName="loginForm">
                    <DataAnnotationsValidator />

                    <div class="mb-3">
                        <label>Email</label>
                        <InputText @bind-Value="model.Email" class="form-control" />
                        <ValidationMessage For="@(() => model.Email)" />
                    </div>

                    <div class="mb-3">
                        <label>Password</label>
                        <InputText type="password" @bind-Value="model.Password" class="form-control" />
                        <ValidationMessage For="@(() => model.Password)" />
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Login</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel model = new();
    private string? errorMessage;
    private async Task HandleLogin()
    {
        var result = await AuthService.LoginAsync(model);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
        else 
        {
            errorMessage = "Invalid password or email. Please try again.";
            Console.WriteLine("Invalid login attempt");
        }
    }
}