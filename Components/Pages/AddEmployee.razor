@page "/add-employee"
@using ManageFlow.Data.Models
@using ManageFlow.Services
@inject IEmployeeService EmployeeService
@rendermode InteractiveServer

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}
@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success" role="alert">
        @successMessage
    </div>
}

<h3> Add New Employee</h3>

<EditForm Model="@employee" OnValidSubmit="@SubmitEmployee">
    <DataAnnotationsValidator />

     <div class="mb-3">
        <label for="firstName">First Name</label>
        <InputText id="firstName" @bind-Value="employee.FirstName" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="lastName">Last Name</label>
        <InputText id="lastName" @bind-Value="employee.LastName" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="employee.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="department">Department</label>
        <InputText id="department" @bind-Value="employee.Department" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="position">Position</label>
        <InputText id="position" @bind-Value="employee.Position" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="salary">Salary Per Annum</label>
        <InputNumber id="salary" @bind-Value="employee.Salary" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Add Employee</button>
</EditForm>

@code {
    private Employees employee = new();
    private string? errorMessage;
    private string? successMessage;

    private async Task SubmitEmployee()
    {
        try 
        {
            var newEmployee = await EmployeeService.CreateEmployeeAsync(employee);
            if (newEmployee != null)
            {
                Console.WriteLine($"Created employee: {newEmployee.FirstName} {newEmployee.LastName}");
                employee = new();
                successMessage = "Employee created successfully!";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            Console.WriteLine($"Error creating employee: {ex.Message}");
        }
    }
}