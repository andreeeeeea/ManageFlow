@page "/dashboard"
@using ManageFlow.Data.Models
@using ManageFlow.Services
@using ManageFlow.Data
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject ITaskManagerService TaskService
@inject IEmployeeService EmployeeService
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<AuthorizeView>
    <Authorized>
        <div class="dashboard-header text-center mb-5">
            <h1 class="welcome-title">Welcome back, @userFirstName! ðŸ‘‹</h1>
            <p class="text-muted fs-5">Here's your workspace overview</p>
        </div>
        <div class="row mb-4 justify-content-center">
            <div class="row row-cols-1 row-cols-md-3">
                <div class="col">
                    <div class="card h-100 text-center">
                        <div class="card-body">
                            <h2 class="card-title display-4 mb-3">@latestTasks</h2>
                            <p class="card-text text-muted">New Tasks This Week</p>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="card h-100 text-center">
                        <div class="card-body">
                        <h2 class="card-title display-4 mb-3">@completedTasksThisWeek</h2>
                        <p class="card-text text-muted">Completed Tasks This Week</p>
                        </div>
                    </div>
                </div>
            
                <div class="col">
                    <div class="card h-100 text-center">
                        <div class="card-body">
                        <h2 class="card-title display-4 mb-3">@employees</h2>
                        <p class="card-text text-muted">Employees In Total</p>
                        </div>
                    </div>
                </div>  
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="text-center">
            <h1 class="display-4">Access Denied</h1>
            <p>You do not have permission to view this page.</p>
        </div>
    </NotAuthorized>
</AuthorizeView>

<style>
.card {
    transition: all 0.3s ease;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, .1);
    padding: 20px;
}

.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .12), 0 4px 8px rgba(0, 0, 0, .06);
}

.card-body .display-4 {
    transition: all 0.3s ease;
}

.card:hover .card-body .display-4 {
    transform: scale(1.1);
}
</style>

@code {
    private string errorMessage;
    private string userFirstName = "User";
    int tasks, latestTasks, completedTasksThisWeek, overdueTasks, tasksDueToday;
    int employees;
    Dictionary<string, int> employeesByDepartment = new Dictionary<string, int>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = await UserManager.GetUserAsync(authState.User);
            if (user != null)
            {
                userFirstName = user.FirstName ?? "User";
            }

            tasks = (await TaskService.GetTasksAsync()).Count;
            latestTasks = (await TaskService.GetLatestTasksAsync()).Count;
            completedTasksThisWeek = (await TaskService.GetCompletedTasksAsync()).Count;
            overdueTasks = (await TaskService.GetOverdueTasksAsync()).Count;
            tasksDueToday = (await TaskService.GetTodayTasksAsync()).Count;


            employees = (await EmployeeService.GetEmployeesAsync()).Count;
            employeesByDepartment = await EmployeeService.GetEmployeeRolesCountAsync();


        }
        catch (Exception e)
        {
            errorMessage = e.Message;
            Console.WriteLine($"Error loading dashboard data: {e.Message}");
        }
    }
}
